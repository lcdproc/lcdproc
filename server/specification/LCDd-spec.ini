[]                     
mountpoint = LCDd.conf
infos/plugins = ni type reference range ; hexnumber network path

; TODO (elektra): Until the max plugin error is not fixed, some specifications will be left commented out

;=============================================================================
;=============================================================================

;Server
;----------------------------------------
[server/driverpath]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = $ORIGIN/drivers/
description = Select the LCD size

[server/drivers]
default = ""
array = #0 ; TODO (kodebach): max drivers ??
check/reference = single
check/reference/restrict = #_14
check/reference/restrict/#0 = @/bayrad/#
check/reference/restrict/#1 = @/cfontz/#
check/reference/restrict/#2 = @/cfontzpacket/#
check/reference/restrict/#3 = @/curses/#
check/reference/restrict/#4 = @/cwlnx/#
check/reference/restrict/#5 = @/glcd/#
check/reference/restrict/#6 = @/glk/#
check/reference/restrict/#7 = @/hd44780/#
check/reference/restrict/#8 = @/lb216/#
check/reference/restrict/#9 = @/lcdm001/#
check/reference/restrict/#_10 = @/linux_input/#
check/reference/restrict/#_11 = @/mtxorb/#
check/reference/restrict/#_12 = @/pyramid/#
check/reference/restrict/#_13 = @/text/#
check/reference/restrict/#_14 = @/xosd/#
description = "Tells the server to load a driver.
The given value is a reference the configuration of the driver, e.g. @/curses/#0"

[server/drivers/#]
type = string
check/type = string
require = 

[server/bind]
type = string
; check/ipaddr = ; TODO (elektra): too many plugins
check/type = string
default = 127.0.0.1
description = Tells the driver to bind to the given interface
opt = a
opt/long = address

[server/port]
type = unsigned_short
; check/port = ; TODO (elektra): too many plugins
; check/port/listen = ; TODO (elektra): too many plugins
check/type = unsigned_short
default = 13666
description = Listen on this specified port. [default: 13666]
opt = p
opt/long = port

[server/reportlevel]
type = unsigned_short
check/type = unsigned_short
check/range = 0-5
default = 2
description = Sets the reporting level, defaults to warnings and errors only.
opt = r
opt/long = report-level

[server/reporttosyslog]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = Should we report to syslog instead of stderr?
opt = s
opt/long = report-to-syslog
opt/arg = none

[server/user]
type = string
check/type = string
default = nobody
description = "set to run as.  LCDd will drop its root privileges and run as this user instead. [default: nobody]"
opt = u
opt/long = user

[server/foreground]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = The server will stay in the foreground if set to yes
opt = f
opt/long = foreground
opt/arg = none

[server/hello/#]
type = string
check/type = string
default = ""
description = "Hello message: each entry represents a display line"

[server/goodbye/#]
type = string
check/type = string
default = ""
description = "GoodBye message: each entry represents a display line"

[server/frameinterval]
type = unsigned_long
check/type = unsigned_long
; check/range = 1- ; TODO (kodebach): open ranges
default = 125000
description = "Sets the interval in microseconds for updating the display [default: 125000 meaning 8Hz]"

[server/waittime]
type = float
check/type = float
; TODO (kodebach): bigger than 2
default = 4
description = Sets the default time in seconds to displays a screen
opt = w
opt/long = wait-time

[server/autorotate]
type = boolean
check/type = boolean
default = 1 ; TODO (elektra): default values conversion
description = If set to no, LCDd will start with screen rotation disabled. This has the\
same effect as if the ToggleRotateKey had been pressed. Rotation will start\
if the ToggleRotateKey is pressed. Note that this setting does not turn off\
priority sorting of screens

[server/serverscreen]
type = enum
check/enum = #2
check/enum/#0 = off
check/enum/#1 = on
check/enum/#2 = blank
default = on
description = If yes, the the serverscreen will be rotated as a usual info screen. If no,\
it will be a background screen, only visible when no other screens are\
active. The special value 'blank' is similar to no, but only a blank screen\
is displayed.
opt = i
opt/long = rotate-server-screen

[server/backlight]
type = enum
check/enum = #2
check/enum/#0 = off
check/enum/#1 = on
check/enum/#2 = open
default = open
description = Set master backlight setting. If set to 'open' a client may control the\
backlight for its own screens (only)

[server/heartbeat]
type = enum
check/enum = #2
check/enum/#0 = off
check/enum/#1 = on
check/enum/#2 = open
default = open
description = Set master heartbeat setting. If set to 'open' a client may control the
heartbeat for its own screens (only)

[server/titlespeed]
type = unsigned_short
check/range = 0-10
default = 10
description = title scrolling speed 

[server/togglerotatekey]
type = string
check/type = string
default = Enter
description = "The '...Key=' lines define what the server does with keypresses that
don't go to any client. The ToggleRotateKey stops rotation of screens, while
the PrevScreenKey and NextScreenKey go back / forward one screen (even if
rotation is disabled.
Assign the key string returned by the driver to the ...Key setting."

[server/prevscreenkey]
type = string
check/type = string
default = Left
description = "The '...Key=' lines define what the server does with keypresses that
don't go to any client. The ToggleRotateKey stops rotation of screens, while
the PrevScreenKey and NextScreenKey go back / forward one screen (even if
rotation is disabled.
Assign the key string returned by the driver to the ...Key setting."

[server/nextscreenkey]
type = string
check/type = string
default = Right
description = "The '...Key=' lines define what the server does with keypresses that
don't go to any client. The ToggleRotateKey stops rotation of screens, while
the PrevScreenKey and NextScreenKey go back / forward one screen (even if
rotation is disabled.
Assign the key string returned by the driver to the ...Key setting."

[server/scrollupkey]
type = string
check/type = string
default = Up
description = "The '...Key=' lines define what the server does with keypresses that
don't go to any client. The ToggleRotateKey stops rotation of screens, while
the PrevScreenKey and NextScreenKey go back / forward one screen (even if
rotation is disabled.
Assign the key string returned by the driver to the ...Key setting."

[server/scrolldownkey]
type = string
check/type = string
default = Down
description = "The '...Key=' lines define what the server does with keypresses that
don't go to any client. The ToggleRotateKey stops rotation of screens, while
the PrevScreenKey and NextScreenKey go back / forward one screen (even if
rotation is disabled.
Assign the key string returned by the driver to the ...Key setting."


;Menu
;==================================================
[menu/permissivegoto]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = If true the server allows transitions between different client`s menus

[menu/menukey]
type = string
check/type = any
default = ""
description = "Up to six keys are supported. The MenuKey (to enter and exit the menu), the
EnterKey (to select values) and at least one movement keys are required."

[menu/enterkey]
type = string
check/type = any
default = ""
description = "Up to six keys are supported. The MenuKey (to enter and exit the menu), the
EnterKey (to select values) and at least one movement keys are required."

[menu/upkey]
type = string
check/type = any
default = ""
description = "Up to six keys are supported. The MenuKey (to enter and exit the menu), the
EnterKey (to select values) and at least one movement keys are required."

[menu/downkey]
type = string
check/type = any
default = ""
description = "Up to six keys are supported. The MenuKey (to enter and exit the menu), the
EnterKey (to select values) and at least one movement keys are required."

[menu/leftkey]
type = string
check/type = any
default = ""
description = "Up to six keys are supported. The MenuKey (to enter and exit the menu), the
EnterKey (to select values) and at least one movement keys are required."

[menu/rightkey]
type = string
check/type = any
default = ""
description = "Up to six keys are supported. The MenuKey (to enter and exit the menu), the
EnterKey (to select values) and at least one movement keys are required."



;bayrad
;==================================================
[bayrad]
default = ""
array = #0

[bayrad/#]
type = struct
check/type = any
default = ""
gen/struct/type = BayradDriverConfig
gen/struct/alloc = 0
description = Configuration for a bayrad driver.

[bayrad/#/file]
type = string
default = "bayrad"
description = name of the shared library to load (without prefix and extension)

[bayrad/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/lcd
description = Select the output device to use

[bayrad/#/speed]
type = unsigned_short
check/type = unsigned_short
check/range = 1200, 2400, 9600, 19200
default = 9600
description = Set the communication speed

;CFontz
;==================================================
[cfontz]
default = ""
array = #0

[cfontz/#]
type = struct
check/type = any
default = ""
gen/struct/type = CFontzDriverConfig
gen/struct/alloc = 0
description = Configuration for a CFontz driver.

[cfontz/#/file]
type = string
default = "CFontz"
description = name of the shared library to load (without prefix and extension)

[cfontz/#/contrast]
type = unsigned_short
check/type = unsigned_short
default = 350
check/range = 0-1000
description = Set the initial contrast

[cfontz/#/brightness]
type = unsigned_short
check/type = unsigned_short
default = 1000
check/range = 0-1000
description = Set the initial brightness

[cfontz/#/offbrightness]
type = unsigned_short
check/type = unsigned_short
default = 0
check/range = 0-1000
description = Set the initial off-brightness.\
This value is used when the display is normally\
switched off in case LCDd is inactive

[cfontz/#/reboot]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = Reinitialize the LCD`s BIOS normally you shouldn`t need this

[cfontz/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/lcd
description = Select the output device to use

[cfontz/#/size]
type = string
check/type = string
check/validation = ([1-9]+[0-9]*)x([1-9]+[0-9]*)
check/validation/match = LINE
check/validation/message = Not a valid size declaration. Examples: 20x4, 19x3, 40x150
default = 20x4
description = Select the LCD size

[cfontz/#/speed]
type = unsigned_short
check/type = unsigned_short
check/range = 1200, 2400, 9600, 19200, 115200
default = 9600
description = Set the communication speed

[cfontz/#/newfirmware]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = "Set the firmware version (New means >= 2.0)"

[cfontz/#/usb]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = "Is this driver using USB?"

;CFontzPacket
;==================================================
[cfontzpacket]
default = ""
array = #0

[cfontzpacket/#]
type = struct
check/type = any
default = ""
gen/struct/type = CFontzPacketDriverConfig
gen/struct/alloc = 0
description = Configuration for a CFontzPacket driver.

[cfontzpacket/#/file]
type = string
default = "CFontzPacket"
description = name of the shared library to load (without prefix and extension)

[cfontzpacket/#/contrast]
type = unsigned_short
check/type = unsigned_short
default = 350
check/range = 0-1000
description = Set the initial contrast

[cfontzpacket/#/brightness]
type = unsigned_short
check/type = unsigned_short
default = 1000
check/range = 0-1000
description = Set the initial brightness

[cfontzpacket/#/offbrightness]
type = unsigned_short
check/type = unsigned_short
default = 0
check/range = 0-1000
description = Set the initial off-brightness.\
This value is used when the display is normally\
switched off in case LCDd is inactive

[cfontzpacket/#/reboot]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = Reinitialize the LCD`s BIOS normally you shouldn`t need this

[cfontzpacket/#/model]
type = enum
check/type = enum
check/enum = #3
check/enum/#0 = 533
check/enum/#1 = 631
check/enum/#2 = 633
check/enum/#3 = 635
gen/enum/type = CFontzPacketModel
default = 633
description = Select the LCD model

[cfontzpacket/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/lcd
;description = Select the output device to use

[cfontzpacket/#/usb]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = Enable the USB flag if the device is connected to an USB port. For serial ports leave it disabled. 

[cfontzpacket/#/oldfirmware]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = Very old 633 firmware versions do not support partial screen updates using\
'Send Data to LCD' command (31). For those devices it may be necessary to\
enable this flag

[cfontzpacket/#/size]
type = string
check/type = string
check/validation = ([1-9]+[0-9]*)x([1-9]+[0-9]*)
check/validation/match = LINE
check/validation/message = Not a valid size declaration. Examples: 20x4, 19x3, 40x150
default = 20x4
description = Override the LCD size known for the selected model. Usually setting this value should not be necessary.

[cfontzpacket/#/speed]
type = unsigned_short
check/type = unsigned_short
check/range = 19200, 115200
default = 115200
description = Override the default communication speed known for the selected model. Default value depends on model.

;curses
;==================================================
[curses]
default = ""
array = #0

[curses/#]
type = struct
check/type = any
default = ""
gen/struct/type = CursesDriverConfig
gen/struct/alloc = 0
description = Configuration for a curses driver.

[curses/#/file]
type = string
default = "curses"
description = name of the shared library to load (without prefix and extension)

[curses/#/foreground]
type = enum
check/type = enum
check/enum = #7
check/enum/#0 = red
check/enum/#1 = black
check/enum/#2 = green
check/enum/#3 = yellow
check/enum/#4 = blue
check/enum/#5 = magenta
check/enum/#6 = cyan
check/enum/#7 = white
gen/enum/type = CursesColor
default = blue
description = Color settings

[curses/#/background]
type = enum
check/type = enum
check/enum = #7
check/enum/#0 = red
check/enum/#1 = black
check/enum/#2 = green
check/enum/#3 = yellow
check/enum/#4 = blue
check/enum/#5 = magenta
check/enum/#6 = cyan
check/enum/#7 = white
gen/enum/type = CursesColor
default = cyan
description = background color when "backlight" is off

[curses/#/backlight]
type = enum
check/type = enum
check/enum = #7
check/enum/#0 = red
check/enum/#1 = black
check/enum/#2 = green
check/enum/#3 = yellow
check/enum/#4 = blue
check/enum/#5 = magenta
check/enum/#6 = cyan
check/enum/#7 = white
gen/enum/type = CursesColor
default = red
description = background color when "backlight" is on

[curses/#/size]
type = string
check/type = string
check/validation = ([1-9]+[0-9]*)x([1-9]+[0-9]*)
check/validation/match = LINE
check/validation/message = Not a valid size declaration. Examples: 20x4, 19x3, 40x150
default = 20x4
description = display size

[curses/#/topleftx]
type = unsigned_short
check/type = unsigned_short
default = 7
description = What position (X,Y) to start the left top corner at...

[curses/#/toplefty]
type = unsigned_short
check/type = unsigned_short
default = 7
description = What position (X,Y) to start the left top corner at...

[curses/#/useacs]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = use ASC symbols for icons & bars  

[curses/#/drawborder]
type = boolean
check/type = boolean
default = 1 ; TODO (elektra): default values conversion
description = draw Border 

;CwLnx
;==================================================
[cwlnx]
default = ""
array = #0

[cwlnx/#]
type = struct
check/type = any
default = ""
gen/struct/type = CwLnxDriverConfig
gen/struct/alloc = 0
description = Configuration for a CwLnx driver.

[cwlnx/#/file]
type = string
default = "CwLnx"
description = name of the shared library to load (without prefix and extension)

[cwlnx/#/model]
type = enum
check/type = enum
check/enum = #2
check/enum/#0 = 12232
check/enum/#1 = 12832
check/enum/#2 = 1602
gen/enum/type = CwLnxModel
default = 12232
description = Select the LCD model

[cwlnx/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/lcd
description = Select the output device to use

[cwlnx/#/size]
type = string
check/type = string
check/validation = ([1-9]+[0-9]*)x([1-9]+[0-9]*)
check/validation/match = LINE
check/validation/message = Not a valid size declaration. Examples: 20x4, 19x3, 40x150
default = 20x4
description = "Select the LCD size. Default depends on model: \n12232: 20x4 \n12832: 21x4 \n1602: 16x2"

[cwlnx/#/speed]
type = unsigned_short
check/type = unsigned_short
check/range = 9600, 19200
default = 19200
description = Set the communication speed

[cwlnx/#/keypad]
type = boolean
check/type = boolean
default = 1 ; TODO (elektra): default values conversion
description = If you have a keypad connected. Keypad layout is currently not configureable from the config file.

[cwlnx/#/keymap_a]
type = string
check/type = string
default = Up
description = "If you have a non-standard keypad you can associate any keystrings to keys.
There are 6 input keys in the CwLnx hardware that generate characters
from 'A' to 'F'.\n
The built-in default mapping hardcoded in the driver.
You can leave those unchanged if you have a standard keypad.
You can change it if you want to report other keystrings or have a non
standard keypad."

[cwlnx/#/keymap_b]
type = string
check/type = string
default = Down
description = "If you have a non-standard keypad you can associate any keystrings to keys.
There are 6 input keys in the CwLnx hardware that generate characters
from 'A' to 'F'.\n
The built-in default mapping hardcoded in the driver.
You can leave those unchanged if you have a standard keypad.
You can change it if you want to report other keystrings or have a non
standard keypad."

[cwlnx/#/keymap_c]
type = string
check/type = string
default = Left
description = "If you have a non-standard keypad you can associate any keystrings to keys.
There are 6 input keys in the CwLnx hardware that generate characters
from 'A' to 'F'.\n
The built-in default mapping hardcoded in the driver.
You can leave those unchanged if you have a standard keypad.
You can change it if you want to report other keystrings or have a non
standard keypad."

[cwlnx/#/keymap_d]
type = string
check/type = string
default = Right
description = "If you have a non-standard keypad you can associate any keystrings to keys.
There are 6 input keys in the CwLnx hardware that generate characters
from 'A' to 'F'.\n
The built-in default mapping hardcoded in the driver.
You can leave those unchanged if you have a standard keypad.
You can change it if you want to report other keystrings or have a non
standard keypad."

[cwlnx/#/keymap_e]
type = string
check/type = string
default = Enter
description = "If you have a non-standard keypad you can associate any keystrings to keys.
There are 6 input keys in the CwLnx hardware that generate characters
from 'A' to 'F'.\n
The built-in default mapping hardcoded in the driver.
You can leave those unchanged if you have a standard keypad.
You can change it if you want to report other keystrings or have a non
standard keypad."

[cwlnx/#/keymap_f]
type = string
check/type = string
default = Escape
description = "If you have a non-standard keypad you can associate any keystrings to keys.
There are 6 input keys in the CwLnx hardware that generate characters
from 'A' to 'F'.\n
The built-in default mapping hardcoded in the driver.
You can leave those unchanged if you have a standard keypad.
You can change it if you want to report other keystrings or have a non
standard keypad."


[cwlnx/#/keypad_test_mode]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = permits one to test keypad assignment

;glk
;==================================================
[glk]
default = ""
array = #0

[glk/#]
type = struct
check/type = any
default = ""
gen/struct/type = GlkDriverConfig
gen/struct/alloc = 0
description = Configuration for a glk driver.

[glk/#/file]
type = string
default = "glk"
description = name of the shared library to load (without prefix and extension)

[glk/#/contrast]
type = unsigned_short
check/type = unsigned_short
default = 500
check/range = 0-1000
description = Set the initial contrast

[glk/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/lcd
description = "select the serial device to use"

[glk/#/speed]
type = unsigned_short
check/type = unsigned_short
check/range = 9600, 19200, 38400, 57600, 115200
default = 19200
description = set the serial port speed

;hd44780
;==================================================
[hd44780]
default = ""
array = #0

[hd44780/#]
type = struct
check/type = any
default = ""
gen/struct/type = Hd44780DriverConfig
gen/struct/alloc = 0
gen/struct/depth = 2
description = Configuration for a hd44780 driver.

[hd44780/#/file]
type = string
default = "hd44780"
description = name of the shared library to load (without prefix and extension)

[hd44780/#/contrast]
type = unsigned_short
check/type = unsigned_short
default = 800
check/range = 0-1000
description = Set the initial contrast

[hd44780/#/brightness]
type = unsigned_short
check/type = unsigned_short
default = 800
check/range = 0-1000

[hd44780/#/offbrightness]
type = unsigned_short
check/type = unsigned_short
default = 300
check/range = 0-1000

[hd44780/#/reboot]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = Reinitialize the LCD`s BIOS normally you shouldn`t need this

[hd44780/#/connectiontype]
type = enum
check/type = enum
check/enum = #_27
check/enum/#0 = 4bit
check/enum/#1 = 8bit
check/enum/#2 = winamp
check/enum/#3 = lcm162
check/enum/#4 = serialLpt
check/enum/#5 = picanlcd
check/enum/#6 = lcdserializer
check/enum/#7 = los-panel
check/enum/#8 = vdr-lcd
check/enum/#9 = vdr-wakeup
check/enum/#_10 = ezio
check/enum/#_11 = pertelian
check/enum/#_12 = lis2
check/enum/#_13 = mplay
check/enum/#_14 = usblcd
check/enum/#_15 = bwctusb
check/enum/#_16 = lcd2usb
check/enum/#_17 = usbtiny
check/enum/#_18 = uss720
check/enum/#_19 = USB-4-all
check/enum/#_20 = ftdi
check/enum/#_21 = i2c
check/enum/#_22 = piplate
check/enum/#_23 = spi
check/enum/#_24 = pifacecad
check/enum/#_25 = ethlcd
check/enum/#_26 = raspberrypi
check/enum/#_27 = gpio
gen/enum/type = Hd44780ConnectionType
default = 4bit
description = "Select what type of connection. See documentation for available types:
  https://github.com/lcdproc/lcdproc/blob/master/docs/lcdproc-user/drivers/hd44780.docbook"

[hd44780/#/model]
type = enum
check/type = enum
check/enum = #7
check/enum/#0 = default
check/enum/#1 = standard
check/enum/#2 = extended
check/enum/#3 = ks0073
check/enum/#4 = hd66710
check/enum/#5 = winstar_oled
check/enum/#6 = weh00xxyya
check/enum/#7 = pt6314_vfd
default = standard
description = "Select model if have non-standard one which require extra initialization or handling or
  just want extra features it offers.
  Available: standard (default), extended, winstar_oled, pt6314_vfd
  - standard is default, use for LCDs not mentioned below.
  - extended, hd66712, ks0073: allows use 4-line 'extended' mode,
    same as deprecated now option ExtendedMode=yes
  - winstar_oled, weh00xxyya: changes initialization for WINSTAR's WEH00xxyyA displays
    and allows handling brightness
  - pt6314_vfd: allows handling brightness on PTC's PT6314 VFDs
  This option should be independent of connection type."

[hd44780/#/port]
type = string
check/type = string
check/validation = 0x[0-9A-F]{3}
check/validation/match = LINE
check/validation/message = Port must begin with "0x", followed by 3 Hexadezimal values, eg. 0x3BC
default = 0x378
description = I/O address of the LPT port. Usual values are: 0x278, 0x378 and 0x3BC.\
  For I2C connections this sets the slave address (usually 0x20).

[hd44780/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = ""
description = "Device of the serial, I2C, or SPI interface (default is connectiontype dependent)"

[hd44780/#/speed]
type = unsigned_long
check/type = unsigned_long
default = 0
description = "Bitrate of the serial port (0 for interface default)"

[hd44780/#/keypad]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = "If you have a keypad connected.
You may also need to configure the keypad layout further on in this file."

[hd44780/#/backlight]
type = enum
check/type = enum
check/enum = #2
check/enum/#0 = default
check/enum/#1 = enabled
check/enum/#2 = disabled
default = default
description = "Whether or not a switchable backlight is be used. If 'default' is chosen,
the value is model dependent. On Winstar OLED and PT6314 VFD, it is 'enabled' on other models
it is 'disabled'."

[hd44780/#/backlightmode]
array = 
default = ""

[hd44780/#/backlightmode/#]
type = enum
check/type = enum
check/enum = #2
check/enum/#0 = external
check/enum/#1 = internal
check/enum/#2 = internalCmds
require =
description = "If the switchable backlight is enabled (see hd44780/#/backlight), this value
determines which method for turning it on/off will be used.
#
The supported methods are:
- external - use external pin or any other method defined with ConnectionType backlight
         handling.
- internal - means that backlight is handled using internal commands according
         to selected display model (with Model option). Depending on model,
         Brightness and OffBrightness options can be taken into account.
- internalCmds - means that commands for turning on and off backlight are given
         with extra options BacklightOnCmd and BacklightOffCmd, which would be treated
         as catch up (last resort) for other types of displays which have similar features.
#
This array will only be taken into account, if hd44780/#/backlight is set to enabled. If it is
set to default and Winstar OLED or PT6314 VFD are used, we will always use 'internal'.
#
Multiple elements can be given, to use multiple methods."
gen/struct/field/ignore = 1

[hd44780/#/backlightcmdon]
type = string
check/type = string
check/validation = 0x[0-9A-F]{4}
check/validation/match = LINE
check/validation/message = 4 bytes can be encoded, as integer number in big-endian order (0x0000-0xFFFF)
default = 0x1223
description = "Commands for enabling internal backlight for use with Backlight=internalCmds.
Up to 4 bytes can be encoded, as integer number in big-endian order.
#
NOTE: this is advanced option, if command contains bits other than only brighness handling,
they must be set accordingly to not disrupt display state. If for example 'FUNCTION SET' command
is used for this purpose, bits of interface length (4-bit / 8-bit) must be set according to
selected ConnectionType."

[hd44780/#/backlightcmdoff]
type = string
check/type = string
check/validation = 0x[0-9A-F]{4}
check/validation/match = LINE
check/validation/message = 4 bytes can be encoded, as integer number in big-endian order (0x0000-0xFFFF)
default = 0x1234
description = "Commands for disabling internal backlight for use with Backlight=internalCmds.
Up to 4 bytes can be encoded, as integer number in big-endian order."

[hd44780/#/outputport]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = If you have the additional output port ("bargraph") and you want to\
be able to control it with the lcdproc OUTPUT command

[hd44780/#/lastline]
type = boolean
check/type = boolean
default = 1 ; TODO (elektra): default values conversion
description = "Specifies if the last line is pixel addressable (yes) or it controls an
underline effect (no)."

[hd44780/#/size]
type = string
check/type = string
check/validation = ([1-9]+[0-9]*)x([1-9]+[0-9]*)
check/validation/match = LINE
check/validation/message = Not a valid size declaration. Examples: 20x4, 19x3, 40x150
default = 20x4
description = Specifies the size of the LCD.\
In case of multiple combined displays, this should be the total size.

[hd44780/#/vspan]
type = string
check/type = string
default = ""
check/validation = ^([1-9][0-9]*(,[1-9][0-9]*)*)?$
check/validation/match = LINE
check/validation/message = Declarations must look like this: 2,2 or 2,2,1
description = "For multiple combined displays: how many lines does each display have.
Vspan=2,2 means both displays have 2 lines."

[hd44780/#/extendedmode]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = "If you have an HD66712, a KS0073 or another controller with 'extended mode',
set this flag to get into 4-line mode. On displays with just two lines, do
not set this flag.
As an additional restriction, controllers with and without extended mode
AND 4 lines cannot be mixed for those connection types that support more
than one display!
NOTE: This option is deprecated in favour of choosing Model=extended option."

[hd44780/#/lineaddress]
type = string
check/type = string
check/validation = 0x([1-9A-F]+[0-9A-F]*)
check/validation/match = LINE
check/validation/message = Not a line Address. eg. 0x20, 0x10
default = 0x20
description = In extended mode, on some controllers like the ST7036 (in 3 line mode)\
the next line in DDRAM won`t start 0x20 higher.

[hd44780/#/charmap]
type = enum
check/type = enum
check/enum = #8
check/enum/#0 = hd44780_default
check/enum/#1 = hd44780_euro
check/enum/#2 = ea_ks0073
check/enum/#3 = sed1278f_0b
check/enum/#4 = hd44780_koi8_r
check/enum/#5 = hd44780_cp1251
check/enum/#6 = hd44780_8859_5
check/enum/#7 = upd16314
check/enum/#8 = weh001602a_1
default = hd44780_default
description = "Character map to to map ISO-8859-1 to the LCD's character set. (hd44780_koi8_r, hd44780_cp1251, hd44780_8859_5, upd16314 and weh001602a_1
are possible if compiled with additional charmaps)"

[hd44780/#/fontbank]
type = unsigned_short
check/type = unsigned_short
check/range = 0-3
default = 0
description = "Font bank to be used for some displays such as the WINSTAR WEH001602A
0: English/Japanese (default)
1: Western Europe I
2: English/Rusian
3: Western Europe II"

[hd44780/#/delaymult]
type = unsigned_short
check/type = unsigned_short
check/range = 1, 2, 4, 8, 16
default = 1
description = "If your display is slow and cannot keep up with the flow of data from
LCDd, garbage can appear on the LCDd. Set this delay factor to 2 or 4
to increase the delays."

[hd44780/#/keepalivedisplay]
type = unsigned_short
check/type = unsigned_short
check/range = 0-10
default = 0
description = "Some displays (e.g. vdr-wakeup) need a message from the driver to that it
is still alive. When set to a value bigger then null the character in the
upper left corner is updated every <KeepAliveDisplay> seconds."

[hd44780/#/refreshdisplay]
type = unsigned_short
check/type = unsigned_short
check/range = 0-20
default = 0
description = "If you experience occasional garbage on your display you can use this
option as workaround. If set to a value bigger than null it forces a
full screen refresh <RefreshDiplay> seconds."

[hd44780/#/delaybus]
type = boolean
check/type = boolean
default = 1 ; TODO (elektra): default values conversion
description = "You can reduce the inserted delays by setting this to false.
On fast PCs it is possible your LCD does not respond correctly."

[hd44780/#/keydirect]
array = #5
default = ""

[hd44780/#/keydirect/#]
type = string
check/type = string
default = ""
description = "If you have a keypad, you can assign keystrings to the keys.
If you have 2d keypad (like on a phone), use hd44780/#/keymatrix/#/# instead."
gen/struct/field/ignore = 1

[hd44780/#/keymatrix]
array = #4
default = "Don't change the max element. We will always use the KEYPAD_MAXX value from hd44780-low.h"

[hd44780/#/keymatrix/#]
array = #_10
default = "Don't change the max element. We will always use the KEYPAD_MAXY value from hd44780-low.h"
gen/struct/field/ignore = 1

[hd44780/#/keymatrix/#/#]
type = string
check/type = string
default = ""
description = "If you have a keypad, you can assign keystrings to the keys.
The first index is the X-coordinate, the second one the Y-cooordinate.
e.g. keymatrix/4/9 is the 5th key in the 10th row (indicies).
If you only have a 1d keypad, use hd44780/#/keydirect/#/# instead."
gen/struct/field/ignore = 1

[hd44780/#/i2c/backlightinvert]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = "default is meant for the data port of PCF8574" ; TODO
gen/struct/field = i2cBacklightInvert

[hd44780/#/i2c/line_rs]
type = long
check/type = long
default = 16 ; TODO (elektra): default values conversion hex?
description = "default is meant for the data port of PCF8574" ; TODO

[hd44780/#/i2c/line_rw]
type = long
check/type = long
default = 32 ; TODO (elektra): default values conversion hex?
description = "default is meant for the data port of PCF8574" ; TODO

[hd44780/#/i2c/line_en]
type = long
check/type = long
default = 64 ; TODO (elektra): default values conversion hex?
description = "default is meant for the data port of PCF8574" ; TODO

[hd44780/#/i2c/line_bl]
type = long
check/type = long
default = 128 ; TODO (elektra): default values conversion hex?
description = "default is meant for the data port of PCF8574" ; TODO

[hd44780/#/i2c/line_d4]
type = long
check/type = long
default = 1 ; TODO (elektra): default values conversion hex?
description = "default is meant for the data port of PCF8574" ; TODO

[hd44780/#/i2c/line_d5]
type = long
check/type = long
default = 2 ; TODO (elektra): default values conversion hex?
description = "default is meant for the data port of PCF8574" ; TODO

[hd44780/#/i2c/line_d6]
type = long
check/type = long
default = 4 ; TODO (elektra): default values conversion hex?
description = "default is meant for the data port of PCF8574" ; TODO

[hd44780/#/i2c/line_d7]
type = long
check/type = long
default = 8 ; TODO (elektra): default values conversion hex?
description = "default is meant for the data port of PCF8574" ; TODO

[hd44780/#/spi/backlightdevice]
type = string
check/type = string
default = ""
description = "" ; TODO
gen/struct/field = spiBacklightDevice

[hd44780/#/usb/serialnumber]
type = string
check/type = string
default = ""
description = "used by bwctusb and ftdi"

[hd44780/#/usb/description]
type = string
check/type = string
default = ""
description = "used by ftdi"

[hd44780/#/usb/vendorid]
type = unsigned_long
check/type = unsigned_long
default = 0 ; TODO (elektra): default values conversion hex?
description = "used by uss720 and ftdi; set to 0 to use connectiontype dependent default"

[hd44780/#/usb/productid]
type = unsigned_long
check/type = unsigned_long
default = 0 ; TODO (elektra): default values conversion hex?
description = "used by uss720 and ftdi; set to 0 to use connectiontype dependent default"

[hd44780/#/ftdi/mode]
type = long
check/type = long
default = 8
check/range = 4, 8
description = "" ; TODO

[hd44780/#/ftdi/line_rs]
type = long
check/type = long
default = 1 ; TODO (elektra): default values conversion hex?
description = "" ; TODO

[hd44780/#/ftdi/line_rw]
type = long
check/type = long
default = 2 ; TODO (elektra): default values conversion hex?
description = "" ; TODO

[hd44780/#/ftdi/line_en]
type = long
check/type = long
default = 4 ; TODO (elektra): default values conversion hex?
description = "" ; TODO

[hd44780/#/ftdi/line_en2]
type = long
check/type = long
default = 0 ; TODO (elektra): default values conversion hex?, default correct?
description = "" ; TODO

[hd44780/#/ftdi/line_backlight]
type = long
check/type = long
default = 8 ; TODO (elektra): default values conversion hex?
description = "" ; TODO

[hd44780/#/gpio/pin_en]
type = long
check/type = long
default = -1
description = "required if raspberrypi or gpio is used;
with raspberrypi -1 triggers the default (8), with gpio it causes an error"

[hd44780/#/gpio/pin_rs]
type = long
check/type = long
default = -1
description = "required if raspberrypi or gpio is used;
with raspberrypi -1 triggers the default (7), with gpio it causes an error"

[hd44780/#/gpio/pin_rw]
type = long
check/type = long
default = -1
description = "required if gpio is used"

[hd44780/#/gpio/pin_d7]
type = long
check/type = long
default = -1
description = "required if raspberrypi or gpio is used;
with raspberrypi -1 triggers the default (18), with gpio it causes an error"

[hd44780/#/gpio/pin_d6]
type = long
check/type = long
default = -1
description = "required if raspberrypi or gpio is used;
with raspberrypi -1 triggers the default (23), with gpio it causes an error"

[hd44780/#/gpio/pin_d5]
type = long
check/type = long
default = -1
description = "required if raspberrypi or gpio is used;
with raspberrypi -1 triggers the default (24), with gpio it causes an error"

[hd44780/#/gpio/pin_d4]
type = long
check/type = long
default = -1
description = "required if raspberrypi or gpio is used;
with raspberrypi -1 triggers the default (25), with gpio it causes an error"

[hd44780/#/gpio/pin_en2]
type = long
check/type = long
default = -1
description = "required if raspberrypi or gpio is used and 2 controllers are connected;
with raspberrypi -1 triggers the default (22), with gpio it causes an error"

[hd44780/#/gpio/pin_bl]
type = long
check/type = long
default = -1
description = "required if raspberrypi or gpio is used and backlight (external) is enabled;
with raspberrypi -1 triggers the default (17), with gpio it causes an error"

;lb216
;==================================================
[lb216]
default = ""
array = #0

[lb216/#]
type = struct
check/type = any
default = ""
gen/struct/type = Lb216DriverConfig
gen/struct/alloc = 0
description = Configuration for a lb216 driver.

[lb216/#/file]
type = string
default = "lb216"
description = name of the shared library to load (without prefix and extension)

[lb216/#/brightness]
type = unsigned_short
check/type = unsigned_short
default = 200
check/range = 0-255

[lb216/#/reboot]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = Reinitialize the LCD`s BIOS normally you shouldn`t need this

[lb216/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/lcd
description = "Select the input device to use"

[lb216/#/speed]
type = unsigned_short
check/type = unsigned_short
check/range = 2400, 9600
default = 9600
description = Set the communication speed

;lcdm001
;==================================================
[lcdm001]
default = ""
array = #0

[lcdm001/#]
type = struct
check/type = any
default = ""
gen/struct/type = Lcdm001DriverConfig
gen/struct/alloc = 0
description = Configuration for a lcdm001 driver.

[lcdm001/#/file]
type = string
default = "lcdm001"
description = name of the shared library to load (without prefix and extension)

[lcdm001/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/ttyS1
description = "select the device to use"

[lcdm001/#/pausekey]
type = enum
check/type = enum
check/enum = #3
check/enum/#0 = LeftKey
check/enum/#1 = RightKey
check/enum/#2 = UpKey
check/enum/#3 = DownKey
gen/enum/type = Lcdm001Keys
default = LeftKey
description = "Normal Context: Pause/Continue 
Menu Context: Enter/select"

[lcdm001/#/backkey]
type = enum
check/type = enum
check/enum = #3
check/enum/#0 = LeftKey
check/enum/#1 = RightKey
check/enum/#2 = UpKey
check/enum/#3 = DownKey
gen/enum/type = Lcdm001Keys
default = UpKey
description = "Normal Context: Back(Go to previous screen) 
Menu Context: Up/Left"

[lcdm001/#/forwardkey]
type = enum
check/type = enum
check/enum = #3
check/enum/#0 = LeftKey
check/enum/#1 = RightKey
check/enum/#2 = UpKey
check/enum/#3 = DownKey
gen/enum/type = Lcdm001Keys
default = DownKey
description = "Normal Context: Forward(Go to next screen) 
Menu Context: Down/Right"

[lcdm001/#/mainmenukey]
type = enum
check/type = enum
check/enum = #3
check/enum/#0 = LeftKey
check/enum/#1 = RightKey
check/enum/#2 = UpKey
check/enum/#3 = DownKey
gen/enum/type = Lcdm001Keys
default = RightKey
description = "Normal Context: Open main menu 
Menu Context: Exit/Cancel"

;linux_input
;==================================================
[linux_input]
default = ""
array = #0

[linux_input/#]
type = struct
check/type = any
default = ""
gen/struct/type = Linux_inputDriverConfig
gen/struct/alloc = 0
description = Configuration for a linux_input driver.

[linux_input/#/file]
type = string
default = "linux_input"
description = name of the shared library to load (without prefix and extension)

[linux_input/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/input/event0
description = "select the device to use"

[linux_input/#/keys]
default = ""
array = #0
description = "specify a non-default key map, eg.: 
  /linux_input/key/#0/code = 1
  /linux_input/key/#0/button = Enter
  sets the keycode 1 to be the Enter key"

[linux_input/#/keys/#]
type = string
default = ""
gen/struct/field/ignore = 1
description = "INGORE: only here to generate tag"

[linux_input/#/keys/#/code]
type = unsigned_short
check/type = unsigned_short
default = 0 ; should be required

[linux_input/#/keys/#/button]
type = string
check/type = string
default = "" ; should be required

;MtxOrb
;==================================================
[mtxorb]
default = ""
array = #0

[mtxorb/#]
type = struct
check/type = any
default = ""
gen/struct/type = MtxOrbDriverConfig
gen/struct/alloc = 0
description = Configuration for a MtxOrb driver.

[mtxorb/#/file]
type = string
default = "MtxOrb"
description = name of the shared library to load (without prefix and extension)

[mtxorb/#/contrast]
type = unsigned_short
check/type = unsigned_short
default = 480
check/range = 0-1000
description = "Set the initial contrast
NOTE: The driver will ignore this if the display
is a vfd or vkd as they don't have this feature"

[mtxorb/#/brightness]
type = unsigned_short
check/type = unsigned_short
default = 1000
check/range = 0-1000

[mtxorb/#/offbrightness]
type = unsigned_short
check/type = unsigned_short
default = 0
check/range = 0-1000
description = "Set the initial off-brightness
This value is used when the display is normally
switched off in case LCDd is inactive"

[mtxorb/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/ttyS0
description = "Select the output device to use"

[mtxorb/#/size]
type = string
check/type = string
check/validation = ([1-9]+[0-9]*)x([1-9]+[0-9]*)
check/validation/match = LINE
check/validation/message = Not a valid size declaration. Examples: 20x4, 19x3, 40x150
default = 20x4
description = display size

[mtxorb/#/type]
type = enum
check/type = enum
check/enum = #3
check/enum/#0 = lcd
check/enum/#1 = lkd
check/enum/#2 = vfd
check/enum/#3 = vkd
default = lcd
description = "Set the display type"

[mtxorb/#/hasadjustablebacklight]
type = boolean
check/type = boolean
gen/struct/field = hasAdjustableBacklight
default = 0 ; TODO (elektra): default values conversion
description = "Some old displays do not have an adjustable backlight but only can
switch the backlight on/off. If you experience randomly appearing block
characters, try setting this to false."

[mtxorb/#/speed]
type = unsigned_short
check/type = unsigned_short
check/range = 1200, 2400, 9600, 19200
default = 19200
description = Set the communication

[mtxorb/#/keypad_test_mode]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = permits one to test keypad assignment

[mtxorb/#/keymap_a]
type = string
check/type = string
default = ""
description = "By default no keys are mapped, meaning the keypad is not used at all."

[mtxorb/#/keymap_b]
type = string
check/type = string
default = ""
description = "By default no keys are mapped, meaning the keypad is not used at all."

[mtxorb/#/keymap_c]
type = string
check/type = string
default = ""
description = "By default no keys are mapped, meaning the keypad is not used at all."

[mtxorb/#/keymap_d]
type = string
check/type = string
default = ""
description = "By default no keys are mapped, meaning the keypad is not used at all."

[mtxorb/#/keymap_e]
type = string
check/type = string
default = ""
description = "By default no keys are mapped, meaning the keypad is not used at all."

[mtxorb/#/keymap_f]
type = string
check/type = string
default = ""
description = "By default no keys are mapped, meaning the keypad is not used at all."

;pyramid
;==================================================
[pyramid]
default = ""
array = #0

[pyramid/#]
type = struct
check/type = any
default = ""
gen/struct/type = PyramidDriverConfig
gen/struct/alloc = 0
description = Configuration for a pyramid driver.

[pyramid/#/file]
type = string
default = "pyramid"
description = name of the shared library to load (without prefix and extension)

[pyramid/#/device]
type = string
check/type = string
; check/path = ; TODO (elektra): too many plugins
default = /dev/lcd
description = "device to connect to"

;text
;==================================================
[text]
default = ""
array = #0

[text/#]
type = struct
check/type = any
default = ""
gen/struct/type = TextDriverConfig
gen/struct/alloc = 0
description = Configuration for a text driver.

[text/#/file]
type = string
default = "text"
description = name of the shared library to load (without prefix and extension)

[text/#/contrast]
type = unsigned_short
check/type = unsigned_short
default = 1000
check/range = 0-1000
description = Set the initial contrast

[text/#/brightness]
type = unsigned_short
check/type = unsigned_short
default = 1000
check/range = 0-1000

[text/#/offbrightness]
type = unsigned_short
check/type = unsigned_short
default = 0
check/range = 0-1000

[text/#/reboot]
type = boolean
check/type = boolean
default = 0 ; TODO (elektra): default values conversion
description = Reinitialize the LCD`s BIOS normally you shouldn`t need this

[text/#/size]
type = string
check/type = string
check/validation = ([1-9]+[0-9]*)x([1-9]+[0-9]*)
check/validation/match = LINE
check/validation/message = Not a valid size declaration. Examples: 20x4, 19x3, 40x150
default = 20x4
description = "set display size"

;xosd
;==================================================
[xosd]
default = ""
array = #0

[xosd/#]
type = struct
check/type = any
default = ""
gen/struct/type = XosdDriverConfig
gen/struct/alloc = 0
description = Configuration for a xosd driver.

[xosd/#/file]
type = string
default = "xosd"
description = name of the shared library to load (without prefix and extension)

[xosd/#/contrast]
type = unsigned_short
check/type = unsigned_short
default = 1000
check/range = 0-1000
description = Set the initial contrast

[xosd/#/brightness]
type = unsigned_short
check/type = unsigned_short
default = 1000
check/range = 0-1000

[xosd/#/offbrightness]
type = unsigned_short
check/type = unsigned_short
default = 0
check/range = 0-1000

[xosd/#/size]
type = string
check/type = string
check/validation = ([1-9]+[0-9]*)x([1-9]+[0-9]*)
check/validation/match = LINE
check/validation/message = Not a valid size declaration. Examples: 20x4, 19x3, 40x150
default = 20x4
description = "set display size"

[xosd/#/offset]
type = string
check/type = string
check/validation = ([1-9]+[0-9]*)x([1-9]+[0-9]*)
check/validation/match = LINE
check/validation/message = Not a valid offset declaration. Examples: 200x200
default = 0x0
description = "Offset in pixels from the top-left corner of the monitor [default: 0x0]"

[xosd/#/font]
type = string
check/type = string
default = "-*-terminus-*-r-*-*-*-320-*-*-*-*-*"
description = "X font to use, in XLFD format, as given by 'xfontsel'"
